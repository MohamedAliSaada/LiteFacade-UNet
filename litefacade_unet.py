# -*- coding: utf-8 -*-
"""LiteFacade-UNet.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12FvaiBdMzLRCR4AhlyrzTtls6ePoegms
"""

import numpy as np
import tensorflow as tf

# fix randomness
np.random.seed(42)
tf.random.set_seed(42)



import matplotlib.pyplot as plt

from class_to_data_generator import ImageDataGenerator
from Unet import Unet
# load the data
import pandas as pd

splits = {'train': 'data/train-00000-of-00001-79d44ab6865989f1.parquet',
          'test': 'data/test-00000-of-00001-1ba52e9214118652.parquet',
          'eval': 'data/eval-00000-of-00001-14ff7f0dec46b299.parquet'}

df_train = pd.read_parquet("hf://datasets/Xpitfire/cmp_facade/" + splits["train"]) #12 classes
df_test = pd.read_parquet("hf://datasets/Xpitfire/cmp_facade/" + splits["test"])
df_eval = pd.read_parquet("hf://datasets/Xpitfire/cmp_facade/" + splits["eval"])


ds_t=ImageDataGenerator(df_train ,32 ,True ,(224,224))
ds_v=ImageDataGenerator(df_eval ,16 ,True ,(224,224))

print("the batches per epoch in train is : ",len(ds_t))
print("the batches per epoch in validation is : ",len(ds_v))

#build the model
unet = Unet(input_shape=(224, 224, 3), last_activation="softmax" , classes=12)
model = unet.model
#model.summary()

# call backs
from tensorflow.keras.callbacks import EarlyStopping ,ReduceLROnPlateau

early_stopping = EarlyStopping(
    monitor='val_loss',
    patience=10,
    restore_best_weights=True
)

reducelronplateau = ReduceLROnPlateau(
    monitor="val_loss",
    factor=0.3,
    patience=3,
    verbose=1,
    min_lr=1e-10,

)

#compile the model

#from tensorflow.keras.metrics import MeanIoU

model.compile(
    optimizer='adam',
    loss='sparse_categorical_crossentropy',
    metrics=['sparse_categorical_accuracy']
)

#fit the model
model.fit(ds_t, validation_data=ds_v, epochs=50  , callbacks=[early_stopping,reducelronplateau])

model.save('LiteFacade-UNet.h5')